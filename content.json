{"meta":{"title":"Dreamkong","subtitle":"人生苦短,我用Python。","description":null,"author":"秦龙","url":"http://qinlong.men"},"pages":[{"title":"","date":"2017-06-23T11:49:05.000Z","updated":"2017-06-23T11:49:05.000Z","comments":false,"path":"categories/index.html","permalink":"http://qinlong.men/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-06-23T11:48:26.000Z","updated":"2017-06-23T11:48:26.000Z","comments":false,"path":"tags/index.html","permalink":"http://qinlong.men/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Python高效编程(一)","slug":"Python高效编程-一","date":"2017-10-19T01:18:47.000Z","updated":"2017-10-19T02:09:34.000Z","comments":true,"path":"2017/10/19/Python高效编程-一/","link":"","permalink":"http://qinlong.men/2017/10/19/Python高效编程-一/","excerpt":"","text":"如何在列表,字典,集合中根据条件筛选数据1234567891011121314from random import randintfrom timeit import timeit​data = [randint(-10,10) for _ in range(10)] filter(lambda x:x &gt;= 0,data)#首选列表解析 时间比filter少一半左右[x for x in data if x &gt;= 0]​data = &#123;x:randint(60,100) for x in range(1,21)&#125;&#123;k:v for k,v in data.items() if v &gt; 90&#125;​data = set(data)&#123;x for x in data if x%3==0&#125; 如何为元组中每个元素命名,提高程序的可读性123456789101112131415161718192021#第一种# NAME = 0# AGE = 1# SEX = 2# EMAIL = 3NAME,AGE,SEX,EMAIL = range(4)student = ('Jan',14,'male','jan@jan.net')#nameprint(student[NAME])#第二种from collections import namedtupleStudent = namedtuple('Student',['name','age','sex','email'])student= Student('Jan',14,'male','jan@jan.net')#nameprint(student[NAME])student.ageisinstance(student,tuple) 如何统计序列中元素的出现频度12345678910111213141516171819202122from random import randintdata = [randint(1,10) for x in range(20)]c = dict.fromkeys(data,0)#第一种for x in data: c[x]+=1 #第二种from collections import Counterc2 = Counter(data)#出现频度最高的三个c2.most_common(3)#统计一篇文章中单词出现次数import re#导入Python之禅import thisc3 = Counter(re.split('\\W+',this.s)) 如何根据字典中值的大小,对字典中的项排序1234567891011from random import randintdata = &#123;x:randint(60,100) for x in 'abcdefg'&#125;#sorted(data.values())#第一种t = zip(data.values(),data.keys())sorted(t)#第二种sorted(data.items(),key=lambda x: x[1]) 如何快速找到多个字典中的公共键(key)123456789101112131415161718from random import randint,samples1 = &#123;x: randint(1,4) for x in sample('abcdefgh',randint(3,6))&#125;s2 = &#123;x: randint(1,4) for x in sample('abcdefgh',randint(3,6))&#125;s3 = &#123;x: randint(1,4) for x in sample('abcdefgh',randint(3,6))&#125;#第一种res = []for k in s1: if k in s2 and k in s3: res.append(k) #第二种from functools import reduces1.keys()&amp;s2.keys()&amp;s3.keys()map(dict.keys,[s1,s2,s3])reduce(lambda a, b:a &amp; b,map(dict.keys,[s1,s2,s3])) 如何让字典保持有序12345678910111213141516171819202122232425262728293031d = &#123;&#125;d['Tom'] = (1,30)d['Linda'] = (1,40)d['Jack'] = (1,50)from collections import OrderedDictd = OrderedDict()d['Tom'] = (1,30)d['Linda'] = (1,40)d['Jack'] = (1,50)d.keys()from time import timefrom random import randintsorce = OrderedDict()players = list('abcdefgh')start = time()for i in range(8): input() p = players.pop(randint(0, 7 - i)) end = time() print(i+1,p,end - start) sorce[p] = (i+1,end - start)print('-'*20)for k in sorce: print(k,sorce[k]) 如何实现用户的历史记录功能(最多n条)1234567891011121314151617181920212223242526from collections import dequefrom random import randintN = randint(0,100)# 一个容纳5个值的队列history = deque([],5)def guess(k): if k == N: print('right!') return True if k &lt; N: print('%s is less than N'%k) else: print('%s is greater than N'%k) return Falsewhile True: input_number = input('please input a number: ') if input_number.isdigit(): k = int(input_number) history.append(k) if guess(k): break elif input_number == 'history': print(list(history))","categories":[{"name":"python","slug":"python","permalink":"http://qinlong.men/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://qinlong.men/tags/python/"},{"name":"高效","slug":"高效","permalink":"http://qinlong.men/tags/高效/"}]},{"title":"Linux 操作命令","slug":"Linux-操作命令","date":"2017-06-26T14:45:42.000Z","updated":"2017-06-26T15:03:13.000Z","comments":true,"path":"2017/06/26/Linux-操作命令/","link":"","permalink":"http://qinlong.men/2017/06/26/Linux-操作命令/","excerpt":"整理了一些日常用的 Linux命令,留作以后查阅之用。","text":"整理了一些日常用的 Linux命令,留作以后查阅之用。绝对路径：cd /home/python相对路径：cd Downloads. 表示：当前那路径..表示：当前路径的上一层../.. 表示：当前路径的上二层没有...或者以上的ls: ls 查看当前路径下的文件以及文件夹的名字 ls /bin 表示：查看根目录下的bin文件夹下的东西 ls Documents 表示：查看当前路径下的Documents文件夹下的所有东西 ls *: * 表示任意多个字符，也可以没有 ? 表示一个字符，一定有1个，不能没有 [xn] 表示：中括号中的任意一个字符 [abcdef]可以写成[a-f]:表示 从a到f之间的任意一个字符 -a 隐藏文件 -l 列表显示风格 -h 配合-l 显示一个合理的大小单位cd ： cd Desktop 进入到Desktop这个文件夹 cd 文件夹的名字 cd .. 跳转到当前路径的上一层 cd - 跳转到上一次所在的路径（类似电视机遥控器中的回看） cd ~ 跳转到当前用户的家目录(/home/python)pwd：显示当前操作的路径（绝对路径 /aaa/bb/cc）clear:清屏tab键：用来自动补全touch:创建一个文件，linux中没有后缀的说法，所有文件名自定义重定向: ls &gt; test.txt 表示：把本来显示在终端上的信息写入到test.txt文件中 &gt;&gt; 和 &gt; 的区别是:&gt;&gt; 是在源文件的末尾添加，而&gt; 先清空然后再添加gedit haha.txt 用gedit编辑器打开haha.txt文件more: more test.txt 如果test.txt文件的内容如果很多，那么就用分屏的方式显示 ls -alh | more 先把ls -alh显示的内容存放到 管道|中，，然后more从管道中去数据，然后分屏显示mkdir:创建文件夹 mkdir a 在当前路径下创建a文件夹 mkdir A/B/C 不能创建，，，需要添加-ptree：以目录树的方式显示 文件夹结构rmdir: 删除空文件夹rm: rm haha.txt 删除一个普通文件 rm 文件夹 会有提示，要删除的东西是个文件夹，，，，如果真的要删除可以添加 -r(递归删除文件夹里面的所有东西)ln -s 源文件 链接文件 表示：软连接ln 源文件 链接文件 表示：硬链接，，，注意硬链接数量为1时，才会真正删除数据，否则不会cat 1. 查看文件的内容 2. 合并多个文件 需要和 重定向&gt;配合 cat 1.txt 2.txt &gt; 3.txtgrep :从指定的文件中搜索需要的内容 -n:显示行号 -i:不区分大小写 -v:取反，即不包含需要的内容的行作业： 有一个文件（内容自定），现在需要把以字母a开头的所有内容和字母b结尾的所有内容存放到一个新文件result.txt中 例如： 源文件为 test.txt,内容如下: sdfisdbbbb abcdefksjdfkjskdfksdj akksjdfkjskdfj0000 kjskdfjaaksjdfkjsdkfaaa ijijsdfjsdbbbbbb12 bksjdkfjsdja kajsdkfjaksb ksjdkfkasdbbbbb 执行完之后的结果为： abcdefksjdfkjskdfksdj akksjdfkjskdfj0000 sdfisdbbbb kajsdkfjaksb ksjdkfkasdbbbbb查找文件： find 路径 -name &apos;*.t?t&apos; 通配符，注意点： [a-zA-Z0-9]*.txt复制文件： cp a b 将a文件夹整体复制到b文件夹下 cp a/* b 将a文件夹下的所有内容赋值到b文件夹下剪切文件： mv a b 将a文件夹整体移动（剪切）到b文件夹下B----字节K----&gt;千字节 1024BM----&gt;兆字节 1024KGTptar -cvf xxx.tar * 打包gzip xxx.tar 压缩gzip -d xxx.tar.gztar -xvf xxx.tar常见的压缩解压方式：tar -zcvf xxx.tar.gz *tar -zxvf xxx.tar.gztar -jcvf xxx.tar.bz2 *tar -jxvf xxx.tar.bz2linux：多用户多任务的OSifconfig :查看ip地址 WINDOWS中使用ipconfigping： ping 192.168.17.76 测试网络连接是否正常ssh:远程登录 ssh python@192.168.17.76 ssh 用户名@ipwhoami：查看当前用户名who:查看当前登录的用户信息exit:退出登录useradd 新的用户名 -m -d /home/新用户名 -g 组名passwd 用户名su 需要切换的用户名su - 需要切换的用户名, 切换用户后，还会主动跳转到该用户的家目录python----&gt;laowang-----&gt;pythonsudo 当需要超级管理员的权限时需要添加，并且在命令行的最前面，后面需要空格sudo passwd laowangsudo -s 直接切换到root用户groupadd YYY 添加一个YYY用户组groupdel YYY 删除一个组，，，，注意需要sudocat /etc/groupgroups laowang表示：查看laowang所属的所有用户组usermod -g YYY laowang 把老王添加到YYY组里面usermod -a -G XXX laowang 把老王添加到XXX组里面 -g 和 -G，-g指定的是默认的组useradd创建的新用户没有sudo，或者切换到root的权限，需要把这个用户添加到adm、sudo组里面才可以chmod 修改文件的权限 u：拥有者 g:同组者 o：其他人 a:所有，即u、g、o + 添加权限 - 去除权限 = 设定权限 r:读------&gt;对应的数字是4 w：写------&gt;对应的数字是2 x：执行------&gt;对应的数字是1 chmod 777 文件夹，只会修改文件夹的权限为777 ，不会修改里面文件的权限 -R 会修改文件夹里面所有的文件、文件夹的权限（递归）vi： 从命令模式---》编辑模式：i、a、o、I、A、O 从编辑模式----》命令模式：ESC 从命令模式----》末行模式：输入一个冒号，即shit+; 末行模式： w保存 q退出 ！强制 常用的： wq保存退出，等价于 x（小写的x），，，，还等价于在命令模式 shit+2个z q!不保存退出 命令模式： hjkl控制上下作用 M中间位置 L当前屏幕的最后一行 yy 复制，8yy：表示从当前光标所在的行开始复制8行 p 粘贴 dd 剪切，8dd：表示从当前光标所在的行开始剪切8行 u 撤销 ctl+r 反撤销 G 调到最后1行 15G 表示跳转到第15行 1G表示跳转到第1行 gg 跳转到第1行","categories":[{"name":"Linux","slug":"Linux","permalink":"http://qinlong.men/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://qinlong.men/tags/Linux/"},{"name":"命令行","slug":"命令行","permalink":"http://qinlong.men/tags/命令行/"}]},{"title":"欢迎来到我的博客!","slug":"World","date":"2017-06-23T08:09:52.000Z","updated":"2017-06-26T15:08:49.000Z","comments":true,"path":"2017/06/23/World/","link":"","permalink":"http://qinlong.men/2017/06/23/World/","excerpt":"我的第一行 Python 代码:","text":"我的第一行 Python 代码: 12print(&apos;Hello World!&apos;)print(&apos;欢迎来到我的博客!&apos;)","categories":[{"name":"python","slug":"python","permalink":"http://qinlong.men/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://qinlong.men/tags/python/"}]}]}