<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dreamkong</title>
  
  <subtitle>人生苦短,我用Python。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qinlong.men/"/>
  <updated>2017-10-26T07:47:35.000Z</updated>
  <id>http://qinlong.men/</id>
  
  <author>
    <name>秦龙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python高效编程(五)</title>
    <link href="http://qinlong.men/2017/10/26/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B-%E4%BA%94/"/>
    <id>http://qinlong.men/2017/10/26/Python高效编程-五/</id>
    <published>2017-10-26T10:40:37.000Z</published>
    <updated>2017-10-26T07:47:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>实际编程和面试都会遇到的典型问题。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片来源于网络" title="">                </div>                <div class="image-caption">图片来源于网络</div>            </figure><h3 id="如何派生内置不可变类型并修改其实例化行为"><a href="#如何派生内置不可变类型并修改其实例化行为" class="headerlink" title="如何派生内置不可变类型并修改其实例化行为"></a>如何派生内置不可变类型并修改其实例化行为</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#我们想自定义一种新类型元组,对于传入的可迭代对象,我们只想保留其中int类型&gt;0的元素 新类型是内置tuple的子类</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntTuple</span><span class="params">(tuple)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls,iterable)</span>:</span></div><div class="line">        <span class="comment"># 使用生成器过滤</span></div><div class="line">        g = (x <span class="keyword">for</span> x <span class="keyword">in</span> iterable <span class="keyword">if</span> isinstance(x,int) <span class="keyword">and</span> x &gt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> super(IntTuple,cls).__new__(cls,g)</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,iterable)</span>:</span></div><div class="line">        super(IntTuple,self).__init__()</div><div class="line">        </div><div class="line">it = IntTuple([<span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>,<span class="string">'x'</span>])    </div><div class="line">it</div></pre></td></tr></table></figure><h3 id="如何为创建大量实例节省内存"><a href="#如何为创建大量实例节省内存" class="headerlink" title="如何为创建大量实例节省内存"></a>如何为创建大量实例节省内存</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,uid,name,status=<span class="number">0</span>,level=<span class="number">1</span>)</span>:</span></div><div class="line">        self.uid = uid</div><div class="line">        self.name = name</div><div class="line">        self.status = status</div><div class="line">        self.level = level</div><div class="line">        </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player2</span><span class="params">(object)</span>:</span></div><div class="line">    __slots__ = [<span class="string">'uid'</span>,<span class="string">'name'</span>,<span class="string">'status'</span>,<span class="string">'level'</span>]</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,uid,name,status=<span class="number">0</span>,level=<span class="number">1</span>)</span>:</span></div><div class="line">        self.uid = uid</div><div class="line">        self.name = name</div><div class="line">        self.status = status</div><div class="line">        self.level = level       </div><div class="line"></div><div class="line">p1 = Player(<span class="string">'001'</span>,<span class="string">'uu'</span>)</div><div class="line">p2 = Player2(<span class="string">'001'</span>,<span class="string">'uu'</span>)</div><div class="line">set(dir(p1)) - set(dir(p2))</div><div class="line"><span class="comment"># p1比p2多了&#123;'__dict__', '__weakref__'&#125;</span></div><div class="line"><span class="comment"># '__dict__'可以动态绑定</span></div><div class="line">p1.x = <span class="number">123</span></div><div class="line"><span class="keyword">del</span> p1.__dict__[<span class="string">'x'</span>]</div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="comment"># 占用了320内存</span></div><div class="line">sys.getsizeof(p1.__dict__)</div><div class="line"></div><div class="line"><span class="comment"># p2事先定义__slots__ 声明了实例属性名字的列表</span></div><div class="line"><span class="comment"># p2就无法动态绑定 从而节省了内存</span></div><div class="line"><span class="comment"># p2.x = 123</span></div></pre></td></tr></table></figure><h3 id="如何创建可管理的对象属性"><a href="#如何创建可管理的对象属性" class="headerlink" title="如何创建可管理的对象属性"></a>如何创建可管理的对象属性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cricle</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,radius)</span>:</span></div><div class="line">        self._radius = radius</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">radius</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._radius</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="meta">    @radius.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">radius</span><span class="params">(self,value)</span>:</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value,(int,float)):</div><div class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'wrong type'</span>)</div><div class="line">        self._radius = value</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getArea</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._radius ** <span class="number">2</span> * pi</div><div class="line"></div><div class="line">c = Cricle(<span class="number">5</span>)</div><div class="line">c.radius</div></pre></td></tr></table></figure><h3 id="如何让类支持比较操作"><a href="#如何让类支持比较操作" class="headerlink" title="如何让类支持比较操作"></a>如何让类支持比较操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</div><div class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> total_ordering</div><div class="line"></div><div class="line"><span class="meta">@total_ordering</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cricle</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,radius)</span>:</span></div><div class="line">        self._radius = radius</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">area</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._radius ** <span class="number">2</span> * pi</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__lt__</span><span class="params">(self,obj)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.area() &lt; obj.area()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__eq__</span><span class="params">(self,obj)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.area() == obj.area()</div><div class="line">    </div><div class="line">c1 = Cricle(<span class="number">3</span>)</div><div class="line">c2 = Cricle(<span class="number">5.0</span>)</div><div class="line">c1 &gt; c2</div></pre></td></tr></table></figure><h3 id="如何使用描述符对实例属性做类型检查"><a href="#如何使用描述符对实例属性做类型检查" class="headerlink" title="如何使用描述符对实例属性做类型检查"></a>如何使用描述符对实例属性做类型检查</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 描述符 __get__ __set__ __del__</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Attr</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,type_)</span>:</span></div><div class="line">        self.name = name</div><div class="line">        self.type_ = type_</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__get__</span><span class="params">(self,instance,cls)</span>:</span></div><div class="line">        <span class="keyword">return</span> instance.__dict__[self.name]</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__set__</span><span class="params">(self,instance,value)</span>:</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(value,self.type_):</div><div class="line">            <span class="keyword">raise</span> TypeError(<span class="string">'expected an %s'</span>%self.type_)</div><div class="line">        instance.__dict__[self.name] = value</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__delete__</span><span class="params">(self,instance)</span>:</span></div><div class="line">        <span class="keyword">del</span> instance.__dict__[self.name]</div><div class="line">        </div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line">    name = Attr(<span class="string">'name'</span>,str)</div><div class="line">    age = Attr(<span class="string">'age'</span>,int)</div><div class="line">    height = Attr(<span class="string">'height'</span>,float)</div><div class="line">    </div><div class="line">p = Person()</div><div class="line">p.name = <span class="string">'123'</span></div><div class="line">p.age = <span class="number">123</span></div><div class="line">p.height = <span class="number">1.0</span></div></pre></td></tr></table></figure><h3 id="如何通过实例方法名字的字符串调用方法"><a href="#如何通过实例方法名字的字符串调用方法" class="headerlink" title="如何通过实例方法名字的字符串调用方法"></a>如何通过实例方法名字的字符串调用方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,r)</span>:</span></div><div class="line">        self.r = r</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">area</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.r ** <span class="number">2</span> * <span class="number">3.14</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,w,h)</span>:</span></div><div class="line">        self.w = w</div><div class="line">        self.h = h</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_area</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.w * self.h</div><div class="line">    </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Triangle</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,a,b,c)</span>:</span></div><div class="line">        self.a = a</div><div class="line">        self.b = b</div><div class="line">        self.c = c</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getArea</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment">#海伦公式:√[p(p-a)(p-b)(p-c) ]其中p=1/2(a+b+c)</span></div><div class="line">        p = (self.a + self.b + self.c) / <span class="number">2</span></div><div class="line">        <span class="keyword">return</span> (p * (p - self.a) * (p - self.b) * (p - self.c)) ** <span class="number">0.5</span></div><div class="line">    </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getArea</span><span class="params">(shape)</span>:</span></div><div class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> (<span class="string">'area'</span>,<span class="string">'get_area'</span>,<span class="string">'getArea'</span>):</div><div class="line">        f = getattr(shape,name,<span class="keyword">None</span>)</div><div class="line">        <span class="keyword">if</span> f:</div><div class="line">            <span class="keyword">return</span> f()</div><div class="line">        </div><div class="line">        </div><div class="line">shape1 = Circle(<span class="number">3</span>)</div><div class="line">shape2 = Rectangle(<span class="number">5</span>,<span class="number">6</span>)</div><div class="line">shape3 = Triangle(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</div><div class="line"></div><div class="line">shapes = [shape1,shape2,shape3]</div><div class="line">print(list(map(getArea,shapes)))</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际编程和面试都会遇到的典型问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Python高效编程" scheme="http://qinlong.men/categories/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://qinlong.men/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python高效编程(四)</title>
    <link href="http://qinlong.men/2017/10/24/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B-%E5%9B%9B/"/>
    <id>http://qinlong.men/2017/10/24/Python高效编程-四/</id>
    <published>2017-10-24T08:52:44.000Z</published>
    <updated>2017-10-24T09:18:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>实际编程和面试都会遇到的典型问题。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片来源于网络" title="">                </div>                <div class="image-caption">图片来源于网络</div>            </figure><h3 id="如何读写文本文件"><a href="#如何读写文本文件" class="headerlink" title="如何读写文本文件"></a>如何读写文本文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># python2</div><div class="line">s = u&apos;你好&apos;</div><div class="line">f = open(&apos;py2.txt&apos;,&apos;w&apos;) </div><div class="line">f.write(s.encode(&apos;gbk&apos;))</div><div class="line">f.close()</div><div class="line">f = open(&apos;py2.txt&apos;,&apos;r&apos;)</div><div class="line">t = f.read()</div><div class="line">f.close()</div><div class="line">print t.decode(&apos;gbk&apos;)</div><div class="line"></div><div class="line"># python3</div><div class="line">f = open(&apos;py3.txt&apos;,&apos;wt&apos;,encoding=&apos;utf-8&apos;)</div><div class="line">f.write(&apos;你好&apos;)</div><div class="line">f.close()</div><div class="line">f = open(&apos;py3.txt&apos;,&apos;rt&apos;,encoding=&apos;utf-8&apos;)</div><div class="line">s = f.read()</div><div class="line">f.close()</div><div class="line">print(s)</div></pre></td></tr></table></figure><h3 id="如何设置文件的缓冲"><a href="#如何设置文件的缓冲" class="headerlink" title="如何设置文件的缓冲"></a>如何设置文件的缓冲</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 全缓冲</div><div class="line"># 默认是4096</div><div class="line">f = open(&apos;demo.txt&apos;,&apos;w&apos;,buffering=2048)</div><div class="line">f.write(&apos;-&apos; * 2048)</div><div class="line">f.write(&apos;+&apos;)</div><div class="line"># 行缓冲</div><div class="line">f = open(&apos;demo1.txt&apos;,&apos;w&apos;,buffering=1)</div><div class="line"># 无缓冲</div><div class="line">f = open(&apos;demo2.txt&apos;,&apos;w&apos;,buffering=0)</div></pre></td></tr></table></figure><h3 id="如何访问文件的状态"><a href="#如何访问文件的状态" class="headerlink" title="如何访问文件的状态"></a>如何访问文件的状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">import os</div><div class="line">import stat</div><div class="line"></div><div class="line">#第一种 直接使用系统调用</div><div class="line"># 1 文件的类型</div><div class="line">s = os.stat(&apos;demo.txt&apos;)</div><div class="line">stat.S_ISDIR(s.st_mode)</div><div class="line">stat.S_ISREG(s.st_mode)</div><div class="line"></div><div class="line"># 2 文件的访问权限</div><div class="line">s.st_mode &amp; stat.S_IXUSR</div><div class="line"></div><div class="line"># 3 文件的最后的访问/修改/节点状态更改时间</div><div class="line">import time</div><div class="line"></div><div class="line">time.localtime(s.st_atime)</div><div class="line">time.localtime(s.st_mtime)</div><div class="line">time.localtime(s.st_ctime)</div><div class="line"># 4 普通文件的大小</div><div class="line">s.st_size</div><div class="line"></div><div class="line">#第二种使用os.path下的函数</div><div class="line">os.path.isdir(&apos;demo.txt&apos;)</div><div class="line">os.path.isfile(&apos;demo.txt&apos;)</div><div class="line"></div><div class="line">os.path.getatime</div></pre></td></tr></table></figure><h3 id="如何使用临时文件"><a href="#如何使用临时文件" class="headerlink" title="如何使用临时文件"></a>如何使用临时文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">from tempfile import TemporaryFile,NamedTemporaryFile</div><div class="line"></div><div class="line">f = TemporaryFile()</div><div class="line">f.write(b&apos;acvbnm&apos;*100)</div><div class="line">f.seek(0)</div><div class="line"></div><div class="line">f.read(2)</div><div class="line"></div><div class="line">ntf = NamedTemporaryFile()</div><div class="line">ntf.name</div></pre></td></tr></table></figure><h3 id="如何读写csv文件"><a href="#如何读写csv文件" class="headerlink" title="如何读写csv文件"></a>如何读写csv文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">from urllib.request import urlretrieve</div><div class="line"></div><div class="line"># 下载平安银行2017-04-01到2017-10-20的数据</div><div class="line">#日期,股票代码,名称,收盘价,最高价,最低价,开盘价,前收盘,涨跌额,涨跌幅,换手率,成交量,成交金额,总市值,流通市值,成交笔数</div><div class="line">urlretrieve(&apos;http://quotes.money.163.com/service/chddata.html?code=1000001&amp;start=20170401&amp;end=20171020&apos;,&apos;pingan.csv&apos;)</div><div class="line"></div><div class="line">with open(&apos;pingan.csv&apos;,&apos;rt&apos;,encoding = &apos;gbk&apos;) as rf:</div><div class="line">    reader = csv.reader(rf)</div><div class="line">    with open(&apos;pingan_copy.csv&apos;,&apos;wt&apos;) as wf:</div><div class="line">        writer = csv.writer(wf)</div><div class="line">        headers = next(reader)</div><div class="line">        writer.writerow(headers)</div><div class="line">        for row in reader:</div><div class="line">            # 提取出2017-10-01后 成交额大于5000W的数据</div><div class="line">            if row[0] &lt; &apos;2017-10-01&apos;:</div><div class="line">                break</div><div class="line">            if round(float(row[12])) &gt;= 50000000:</div><div class="line">                writer.writerow(row)</div><div class="line"></div><div class="line">print(&apos;end&apos;)</div></pre></td></tr></table></figure><h3 id="如何读写json文件"><a href="#如何读写json文件" class="headerlink" title="如何读写json文件"></a>如何读写json文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">import json</div><div class="line">import requests</div><div class="line"></div><div class="line">url = &apos;http://wthrcdn.etouch.cn/weather_mini?city=北京&apos;</div><div class="line">response = requests.get(url)</div><div class="line"></div><div class="line"># json.loads: str转成dict</div><div class="line">res = json.loads(response.content.decode(&apos;utf-8&apos;))</div><div class="line">type(res)</div><div class="line">weather_forecast = res[&apos;data&apos;][&apos;forecast&apos;][0]</div><div class="line"></div><div class="line"># json.dumps: dict转成str</div><div class="line">l = json.dumps(res)</div><div class="line">type(l)</div></pre></td></tr></table></figure><h3 id="如何构建并解析xml文件"><a href="#如何构建并解析xml文件" class="headerlink" title="如何构建并解析xml文件"></a>如何构建并解析xml文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">from xml.etree.ElementTree import Element,ElementTree,tostring,parse</div><div class="line"></div><div class="line">e = Element(&apos;collection&apos;)</div><div class="line">e.set(&apos;shelf&apos;,&apos;New Arrivals&apos;)</div><div class="line">e1 = Element(&apos;movie&apos;)</div><div class="line">e1.set(&apos;title&apos;,&apos;Enemy Behind&apos;)</div><div class="line">e11 = Element(&apos;type&apos;)</div><div class="line">e11.text = &apos;War, Thriller&apos;</div><div class="line">e1.append(e11)</div><div class="line">e.append(e1)</div><div class="line">e2 = Element(&apos;movie&apos;)</div><div class="line">e2.set(&apos;title&apos;,&apos;Enemy Behind&apos;)</div><div class="line">e21 = Element(&apos;type&apos;)</div><div class="line">e21.text = &apos;War, Thriller&apos;</div><div class="line">e2.append(e21)</div><div class="line">e.append(e2)</div><div class="line">e3 = Element(&apos;movie&apos;)</div><div class="line">e3.set(&apos;title&apos;,&apos;Enemy Behind&apos;)</div><div class="line">e31 = Element(&apos;type&apos;)</div><div class="line">e31.text = &apos;War, Thriller&apos;</div><div class="line">e3.append(e31)</div><div class="line">e.append(e3)</div><div class="line">e4 = Element(&apos;movie&apos;)</div><div class="line">e4.set(&apos;title&apos;,&apos;Enemy Behind&apos;)</div><div class="line">e41 = Element(&apos;type&apos;)</div><div class="line">e41.text = &apos;War, Thriller&apos;</div><div class="line">e4.append(e41)</div><div class="line">e.append(e4)</div><div class="line"></div><div class="line">et = ElementTree(e)</div><div class="line">et.write(&apos;demo.xml&apos;)</div><div class="line"> </div><div class="line">f = open(&apos;demo.xml&apos;)</div><div class="line">et = parse(f)</div><div class="line">root = et.getroot()</div><div class="line"></div><div class="line"># for child in root:</div><div class="line">#     print(child.get(&apos;title&apos;))</div><div class="line"></div><div class="line">#只能寻找当前元素的直接子元素</div><div class="line">root.find(&apos;movie[@title]&apos;)</div><div class="line">root.findall(&apos;movie&apos;)</div><div class="line">root.findall(&apos;movie[1]&apos;)</div><div class="line">root.findall(&apos;movie[@title=&quot;Ishtar&quot;]&apos;)</div><div class="line">root.findall(&apos;movie[type=&quot;Comedy&quot;]&apos;)</div><div class="line">list(root.iter(&apos;movie&apos;))</div></pre></td></tr></table></figure><h3 id="如何读写excel文件"><a href="#如何读写excel文件" class="headerlink" title="如何读写excel文件"></a>如何读写excel文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">import xlrd,xlwt</div><div class="line"></div><div class="line"># 读</div><div class="line">rbook = xlrd.open_workbook(&apos;demo.xlsx&apos;)</div><div class="line">sheet = rbook.sheet_by_index(0)</div><div class="line"># 列数</div><div class="line">sheet.ncols</div><div class="line"># 行数</div><div class="line">sheet.nrows</div><div class="line"># 单元格 cell</div><div class="line">cell = sheet.cell(0,0)</div><div class="line"># 返回一行</div><div class="line">sheet.row(0)</div><div class="line">sheet.row_values(1)</div><div class="line"># 返回一列</div><div class="line">sheet.col(0)</div><div class="line">sheet.col_values(1)</div><div class="line"></div><div class="line"># 写</div><div class="line">wbook = xlwt.Workbook()</div><div class="line">wsheet = wbook.add_sheet(&apos;sheet1&apos;)</div><div class="line"># 写入cell</div><div class="line">wsheet.write(0,0,&apos;123&apos;)</div><div class="line">wbook.save(&apos;output.xlsx&apos;)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际编程和面试都会遇到的典型问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Python高效编程" scheme="http://qinlong.men/categories/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://qinlong.men/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python高效编程(三)</title>
    <link href="http://qinlong.men/2017/10/20/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B-%E4%B8%89/"/>
    <id>http://qinlong.men/2017/10/20/Python高效编程-三/</id>
    <published>2017-10-20T09:08:39.000Z</published>
    <updated>2017-10-24T09:18:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>实际编程和面试都会遇到的典型问题。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片来源于网络" title="">                </div>                <div class="image-caption">图片来源于网络</div>            </figure><h3 id="如何判断字符串a是否已字符串b开头或者结尾"><a href="#如何判断字符串a是否已字符串b开头或者结尾" class="headerlink" title="如何判断字符串a是否已字符串b开头或者结尾"></a>如何判断字符串a是否已字符串b开头或者结尾</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#遍历以'.py'和'.sh'结尾的文件,改为可执行权限</span></div><div class="line"><span class="keyword">import</span> os, stat</div><div class="line"></div><div class="line">s = <span class="string">'test.py'</span></div><div class="line">s.endswith((<span class="string">'.py'</span>,<span class="string">'.sh'</span>))<span class="comment">#参数只能是tuple</span></div><div class="line"></div><div class="line"><span class="comment">#文件权限</span></div><div class="line">oct(os.stat(<span class="string">'test.sh'</span>).st_mode)</div><div class="line">os.chmod(<span class="string">'test.sh'</span>,os.stat(<span class="string">'test.sh'</span>).st_mode|stat.S_IXUSR)</div><div class="line"></div><div class="line"><span class="keyword">for</span> name <span class="keyword">in</span> os.listdir():</div><div class="line">    <span class="keyword">if</span> name.endswith((<span class="string">'.py'</span>,<span class="string">'.sh'</span>)):</div><div class="line">        os.chmod(name,os.stat(name).st_mode|stat.S_IXUSR)</div></pre></td></tr></table></figure><h3 id="如何调整字符串中的文本格式"><a href="#如何调整字符串中的文本格式" class="headerlink" title="如何调整字符串中的文本格式"></a>如何调整字符串中的文本格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">2017-10-09adasdasdasd</span></div><div class="line"><span class="string">2017-11-12dsfsfsdfsdfsd</span></div><div class="line"><span class="string">将其中的日期(yyyy-MM-dd)改为(MM/dd/YYYY)格式</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">s = <span class="string">'2017-10-09adasdasdasd\n2017-11-12dsfsfsdfsdfsd'</span></div><div class="line">re.sub(<span class="string">'(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)'</span>,<span class="string">r'\2/\3/\1'</span>,s)</div><div class="line">re.sub(<span class="string">'(?P&lt;year&gt;\d&#123;4&#125;)-(?P&lt;month&gt;\d&#123;2&#125;)-(?P&lt;day&gt;\d&#123;2&#125;)'</span>,<span class="string">r'\g&lt;month&gt;/\g&lt;day&gt;/\g&lt;year&gt;'</span>,s)</div></pre></td></tr></table></figure><h3 id="如何将多个小字符串拼接成一个大字符串"><a href="#如何将多个小字符串拼接成一个大字符串" class="headerlink" title="如何将多个小字符串拼接成一个大字符串"></a>如何将多个小字符串拼接成一个大字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#第一种(拼接项少) +</span></div><div class="line"><span class="comment">#第二种(拼接项多) ''.join()</span></div><div class="line">list1 = [<span class="string">'abc'</span>,<span class="string">'123'</span>,<span class="string">'23'</span>,<span class="string">'sdsa'</span>,<span class="string">'xyz'</span>]</div><div class="line"><span class="string">''</span>.join(list1)</div><div class="line"></div><div class="line">list2 = [<span class="string">'abc'</span>,<span class="number">123</span>,<span class="string">'23'</span>,<span class="number">4654</span>,<span class="string">'xyz'</span>]</div><div class="line"><span class="string">''</span>.join(str(x) <span class="keyword">for</span> x <span class="keyword">in</span> list2)</div></pre></td></tr></table></figure><h3 id="如何对字符串进行左-右-居中对齐"><a href="#如何对字符串进行左-右-居中对齐" class="headerlink" title="如何对字符串进行左,右,居中对齐"></a>如何对字符串进行左,右,居中对齐</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">'abc'</span></div><div class="line"><span class="comment">#第一种 ljust() rjust() center()</span></div><div class="line">s.ljust(<span class="number">20</span>)</div><div class="line">s.rjust(<span class="number">20</span>,<span class="string">'!'</span>)</div><div class="line">s.center(<span class="number">20</span>,<span class="string">"-"</span>)</div><div class="line"></div><div class="line"><span class="comment">#第二种 format</span></div><div class="line">format(s,<span class="string">'&lt;20'</span>)</div><div class="line">format(s,<span class="string">'&gt;20'</span>)</div><div class="line">format(s,<span class="string">'^20'</span>)</div></pre></td></tr></table></figure><h3 id="如何去掉字符串中不需要的字符"><a href="#如何去掉字符串中不需要的字符" class="headerlink" title="如何去掉字符串中不需要的字符"></a>如何去掉字符串中不需要的字符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#1 去掉字符串两端的字符 strip() lstrip() rstrip()</span></div><div class="line">s = <span class="string">'   aac 123  '</span></div><div class="line">s.strip()</div><div class="line">s = <span class="string">'!!!!asdasd+++++'</span></div><div class="line">s.strip(<span class="string">'!+'</span>)</div><div class="line"></div><div class="line"><span class="comment">#2 删除单个固定位置字符,可以使用切片+拼接</span></div><div class="line">s = <span class="string">'abc::123'</span></div><div class="line">s[:<span class="number">3</span>]+s[<span class="number">5</span>:]</div><div class="line"></div><div class="line"><span class="comment">#3 字符串的replace()方法或正则表达式re.sub()删除任意位置字符</span></div><div class="line">s = <span class="string">'\tabc\r\t123\txyz'</span></div><div class="line">s.replace(<span class="string">'\t'</span>,<span class="string">''</span>)<span class="comment">#只能替换一种</span></div><div class="line"><span class="keyword">import</span> re</div><div class="line">re.sub(<span class="string">'[\t,\r]'</span>,<span class="string">''</span>,s)<span class="comment">#支持同时替换多种</span></div><div class="line"></div><div class="line"><span class="comment">#4 字符串translate()方法.可以同时删除多种不同字符</span></div><div class="line">s = <span class="string">'abc234456xyz'</span></div><div class="line">s.translate(str.maketrans(<span class="string">'abcxyz'</span>,<span class="string">'xyzabc'</span>))</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际编程和面试都会遇到的典型问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Python高效编程" scheme="http://qinlong.men/categories/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://qinlong.men/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python高效编程(二)</title>
    <link href="http://qinlong.men/2017/10/20/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B-%E4%BA%8C/"/>
    <id>http://qinlong.men/2017/10/20/Python高效编程-二/</id>
    <published>2017-10-20T05:10:15.000Z</published>
    <updated>2017-10-24T09:18:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>实际编程和面试都会遇到的典型问题。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片来源于网络" title="">                </div>                <div class="image-caption">图片来源于网络</div>            </figure><a id="more"></a><h3 id="如何实现可迭代对象和迭代器对象"><a href="#如何实现可迭代对象和迭代器对象" class="headerlink" title="如何实现可迭代对象和迭代器对象"></a>如何实现可迭代对象和迭代器对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#可迭代对象</span></div><div class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div><div class="line">s = <span class="string">'abcde'</span></div><div class="line"></div><div class="line"><span class="comment">#迭代器对象</span></div><div class="line">t = iter(l)</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterator,Iterable</div><div class="line"></div><div class="line"><span class="comment">#实现一个迭代器对象WeatherIterator,__next__方法每次返回一个城市气温</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherIterator</span><span class="params">(Iterator)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,cities)</span>:</span></div><div class="line">        self.cities = cities</div><div class="line">        self.index = <span class="number">0</span></div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getWeather</span><span class="params">(city)</span>:</span></div><div class="line">        r = requests.get(<span class="string">u'http://wthrcdn.etouch.cn/weather_mini?city='</span> + city)</div><div class="line">        data = r.json()[<span class="string">'data'</span>][<span class="string">'forecast'</span>][<span class="number">0</span>]</div><div class="line">        <span class="keyword">return</span> <span class="string">'%s: %s ,%s '</span>%(city,data[<span class="string">'low'</span>],data[<span class="string">'high'</span>])</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.index == len(self.cities):</div><div class="line">            <span class="keyword">raise</span> StopIteration</div><div class="line">        city = self.cities[self.index]</div><div class="line">        self.index += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> getWeather(city)</div><div class="line"></div><div class="line"><span class="comment">#实现一个可迭代对象WeatherIterable,__iter__方法返回一个迭代器对象</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherIterable</span><span class="params">(Iterable)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,cities)</span>:</span></div><div class="line">        self.cities = cities</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> WeatherIterator(self.cities)</div><div class="line">    </div><div class="line"><span class="comment">#[u'漠河',u'海南',u'乌鲁木齐',u'上海']</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> WeatherIterable([<span class="string">u'漠河'</span>,<span class="string">u'海南'</span>,<span class="string">u'乌鲁木齐'</span>,<span class="string">u'上海'</span>]):</div><div class="line">    print(x)</div></pre></td></tr></table></figure><h3 id="如何使用生成器函数实现可迭代对象"><a href="#如何使用生成器函数实现可迭代对象" class="headerlink" title="如何使用生成器函数实现可迭代对象"></a>如何使用生成器函数实现可迭代对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 给定一个可迭代对象的类,它能迭代出给定范围内的所有素数</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrimeNumber</span><span class="params">()</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,start,end)</span>:</span></div><div class="line">        self.start = start</div><div class="line">        self.end = end</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPrimeNum</span><span class="params">(self,k)</span>:</span></div><div class="line">        <span class="keyword">if</span> k &lt; <span class="number">2</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,k):</div><div class="line">            <span class="keyword">if</span> k % i == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(self.start,self.end + <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> self.isPrimeNum(k):</div><div class="line">                <span class="keyword">yield</span> k</div><div class="line"></div><div class="line">                </div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> PrimeNumber(<span class="number">1</span>,<span class="number">100</span>):</div><div class="line">    print(x)</div></pre></td></tr></table></figure><h3 id="如何进行反向迭代以及如何实现反向迭代"><a href="#如何进行反向迭代以及如何实现反向迭代" class="headerlink" title="如何进行反向迭代以及如何实现反向迭代"></a>如何进行反向迭代以及如何实现反向迭代</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#实现一个连续浮点数发生器FloatRange(start,end,step)</span></div><div class="line"></div><div class="line"><span class="comment"># l = [1,2,3,4,5]</span></div><div class="line"></div><div class="line"><span class="comment"># for x in reversed(l):</span></div><div class="line"><span class="comment">#     print(x)</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FloatRange</span><span class="params">()</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,start,end,step=<span class="number">0.1</span>)</span>:</span></div><div class="line">        self.start = start</div><div class="line">        self.end = end</div><div class="line">        self.step = step</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span><span class="params">(self)</span>:</span></div><div class="line">        t = self.start</div><div class="line">        <span class="keyword">while</span> t &lt;= self.end:</div><div class="line">            <span class="keyword">yield</span> t</div><div class="line">            t += self.step</div><div class="line">            </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reversed__</span><span class="params">(self)</span>:</span></div><div class="line">        t = self.end</div><div class="line">        <span class="keyword">while</span> t &gt;= self.start:</div><div class="line">            <span class="keyword">yield</span> t</div><div class="line">            t -= self.step</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> reversed(FloatRange(<span class="number">1.0</span>,<span class="number">5.5</span>,<span class="number">0.5</span>)):</div><div class="line">    print(x)</div></pre></td></tr></table></figure><h3 id="如何对迭代器做切片操作"><a href="#如何对迭代器做切片操作" class="headerlink" title="如何对迭代器做切片操作"></a>如何对迭代器做切片操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#有一个文本文件,我们想获取某范围内的内容 eg:100-300lines</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> this</div><div class="line"></div><div class="line">f = open(<span class="string">'test'</span>,<span class="string">'w'</span>)</div><div class="line">f.write(this.s)</div><div class="line">f.close()</div><div class="line"></div><div class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> islice</div><div class="line"></div><div class="line">f = open(<span class="string">'test'</span>,<span class="string">'r'</span>)</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> islice(f,<span class="number">3</span>,<span class="number">5</span>):</div><div class="line">    print(x)</div></pre></td></tr></table></figure><h3 id="如何在一个for语句中迭代多个可迭代对象"><a href="#如何在一个for语句中迭代多个可迭代对象" class="headerlink" title="如何在一个for语句中迭代多个可迭代对象"></a>如何在一个for语句中迭代多个可迭代对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="comment">#每个学生有三门成绩(并行)</span></div><div class="line">chese_grade = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">50</span>)]</div><div class="line">english_grade = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">50</span>)]</div><div class="line">math_grade = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">50</span>)]</div><div class="line"></div><div class="line"><span class="keyword">for</span> c,e,m <span class="keyword">in</span> zip(chese_grade,english_grade,math_grade):</div><div class="line">    print(<span class="string">'总分:%3d 语文:%3d 英语:%3d 数学:%3d'</span>%(c+e+m,c,e,m))</div><div class="line"></div><div class="line"><span class="comment">#有四个班,一次英语考试的成绩存储在四个列表里,统计90以上的人数(串行)</span></div><div class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</div><div class="line"></div><div class="line">chain([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>])</div><div class="line"></div><div class="line">english_grade1 = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">45</span>)]</div><div class="line">english_grade2 = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">53</span>)]</div><div class="line">english_grade3 = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">49</span>)]</div><div class="line">english_grade4 = [randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">35</span>)]</div><div class="line"></div><div class="line">count = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> chain(english_grade1,english_grade2,english_grade3,english_grade4):</div><div class="line">    <span class="keyword">if</span> x &gt;= <span class="number">90</span>:</div><div class="line">        count += <span class="number">1</span></div><div class="line"></div><div class="line">print(count)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际编程和面试都会遇到的典型问题。&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图片来源于网络&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;图片来源于网络&lt;/div&gt;
            &lt;/figure&gt;
    
    </summary>
    
      <category term="Python高效编程" scheme="http://qinlong.men/categories/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://qinlong.men/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python高效编程(一)</title>
    <link href="http://qinlong.men/2017/10/19/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B-%E4%B8%80/"/>
    <id>http://qinlong.men/2017/10/19/Python高效编程-一/</id>
    <published>2017-10-19T01:18:47.000Z</published>
    <updated>2017-10-24T09:18:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>实际编程和面试都会遇到的典型问题。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片来源于网络" title="">                </div>                <div class="image-caption">图片来源于网络</div>            </figure><a id="more"></a><h3 id="如何在列表-字典-集合中根据条件筛选数据"><a href="#如何在列表-字典-集合中根据条件筛选数据" class="headerlink" title="如何在列表,字典,集合中根据条件筛选数据"></a>如何在列表,字典,集合中根据条件筛选数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> timeit <span class="keyword">import</span> timeit</div><div class="line">​</div><div class="line">data = [randint(<span class="number">-10</span>,<span class="number">10</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line"> </div><div class="line">filter(<span class="keyword">lambda</span> x:x &gt;= <span class="number">0</span>,data)</div><div class="line"><span class="comment">#首选列表解析 时间比filter少一半左右</span></div><div class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> data <span class="keyword">if</span> x &gt;= <span class="number">0</span>]</div><div class="line">​</div><div class="line">data = &#123;x:randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">21</span>)&#125;</div><div class="line">&#123;k:v <span class="keyword">for</span> k,v <span class="keyword">in</span> data.items() <span class="keyword">if</span> v &gt; <span class="number">90</span>&#125;</div><div class="line">​</div><div class="line">data = set(data)</div><div class="line">&#123;x <span class="keyword">for</span> x <span class="keyword">in</span> data <span class="keyword">if</span> x%<span class="number">3</span>==<span class="number">0</span>&#125;</div></pre></td></tr></table></figure><h3 id="如何为元组中每个元素命名-提高程序的可读性"><a href="#如何为元组中每个元素命名-提高程序的可读性" class="headerlink" title="如何为元组中每个元素命名,提高程序的可读性"></a>如何为元组中每个元素命名,提高程序的可读性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#第一种</span></div><div class="line"><span class="comment"># NAME = 0</span></div><div class="line"><span class="comment"># AGE = 1</span></div><div class="line"><span class="comment"># SEX = 2</span></div><div class="line"><span class="comment"># EMAIL = 3</span></div><div class="line">NAME,AGE,SEX,EMAIL = range(<span class="number">4</span>)</div><div class="line"></div><div class="line">student = (<span class="string">'Jan'</span>,<span class="number">14</span>,<span class="string">'male'</span>,<span class="string">'jan@jan.net'</span>)</div><div class="line"></div><div class="line"><span class="comment">#name</span></div><div class="line">print(student[NAME])</div><div class="line"></div><div class="line"><span class="comment">#第二种</span></div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</div><div class="line"></div><div class="line">Student = namedtuple(<span class="string">'Student'</span>,[<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="string">'sex'</span>,<span class="string">'email'</span>])</div><div class="line">student= Student(<span class="string">'Jan'</span>,<span class="number">14</span>,<span class="string">'male'</span>,<span class="string">'jan@jan.net'</span>)</div><div class="line"><span class="comment">#name</span></div><div class="line">print(student[NAME])</div><div class="line">student.age</div><div class="line">isinstance(student,tuple)</div></pre></td></tr></table></figure><h3 id="如何统计序列中元素的出现频度"><a href="#如何统计序列中元素的出现频度" class="headerlink" title="如何统计序列中元素的出现频度"></a>如何统计序列中元素的出现频度</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">data = [randint(<span class="number">1</span>,<span class="number">10</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">20</span>)]</div><div class="line">c = dict.fromkeys(data,<span class="number">0</span>)</div><div class="line"></div><div class="line"><span class="comment">#第一种</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> data:</div><div class="line">    c[x]+=<span class="number">1</span></div><div class="line">    </div><div class="line"><span class="comment">#第二种</span></div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"></div><div class="line">c2 = Counter(data)</div><div class="line"><span class="comment">#出现频度最高的三个</span></div><div class="line">c2.most_common(<span class="number">3</span>)</div><div class="line"></div><div class="line"><span class="comment">#统计一篇文章中单词出现次数</span></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="comment">#导入Python之禅</span></div><div class="line"><span class="keyword">import</span> this</div><div class="line"></div><div class="line">c3 = Counter(re.split(<span class="string">'\W+'</span>,this.s))</div></pre></td></tr></table></figure><h3 id="如何根据字典中值的大小-对字典中的项排序"><a href="#如何根据字典中值的大小-对字典中的项排序" class="headerlink" title="如何根据字典中值的大小,对字典中的项排序"></a>如何根据字典中值的大小,对字典中的项排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">data = &#123;x:randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'abcdefg'</span>&#125;</div><div class="line"><span class="comment">#sorted(data.values())</span></div><div class="line"></div><div class="line"><span class="comment">#第一种</span></div><div class="line">t = zip(data.values(),data.keys())</div><div class="line">sorted(t)</div><div class="line"></div><div class="line"><span class="comment">#第二种</span></div><div class="line">sorted(data.items(),key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</div></pre></td></tr></table></figure><h3 id="如何快速找到多个字典中的公共键-key"><a href="#如何快速找到多个字典中的公共键-key" class="headerlink" title="如何快速找到多个字典中的公共键(key)"></a>如何快速找到多个字典中的公共键(key)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint,sample</div><div class="line"></div><div class="line">s1 = &#123;x: randint(<span class="number">1</span>,<span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcdefgh'</span>,randint(<span class="number">3</span>,<span class="number">6</span>))&#125;</div><div class="line">s2 = &#123;x: randint(<span class="number">1</span>,<span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcdefgh'</span>,randint(<span class="number">3</span>,<span class="number">6</span>))&#125;</div><div class="line">s3 = &#123;x: randint(<span class="number">1</span>,<span class="number">4</span>) <span class="keyword">for</span> x <span class="keyword">in</span> sample(<span class="string">'abcdefgh'</span>,randint(<span class="number">3</span>,<span class="number">6</span>))&#125;</div><div class="line"></div><div class="line"><span class="comment">#第一种</span></div><div class="line">res = []</div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> s1:</div><div class="line">    <span class="keyword">if</span> k <span class="keyword">in</span> s2 <span class="keyword">and</span> k <span class="keyword">in</span> s3:</div><div class="line">        res.append(k)</div><div class="line">        </div><div class="line"><span class="comment">#第二种</span></div><div class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</div><div class="line"></div><div class="line">s1.keys()&amp;s2.keys()&amp;s3.keys()</div><div class="line">map(dict.keys,[s1,s2,s3])</div><div class="line">reduce(<span class="keyword">lambda</span> a, b:a &amp; b,map(dict.keys,[s1,s2,s3]))</div></pre></td></tr></table></figure><h3 id="如何让字典保持有序"><a href="#如何让字典保持有序" class="headerlink" title="如何让字典保持有序"></a>如何让字典保持有序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">d = &#123;&#125;</div><div class="line"></div><div class="line">d[<span class="string">'Tom'</span>] = (<span class="number">1</span>,<span class="number">30</span>)</div><div class="line">d[<span class="string">'Linda'</span>] = (<span class="number">1</span>,<span class="number">40</span>)</div><div class="line">d[<span class="string">'Jack'</span>] = (<span class="number">1</span>,<span class="number">50</span>)</div><div class="line"></div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</div><div class="line"></div><div class="line">d = OrderedDict()</div><div class="line">d[<span class="string">'Tom'</span>] = (<span class="number">1</span>,<span class="number">30</span>)</div><div class="line">d[<span class="string">'Linda'</span>] = (<span class="number">1</span>,<span class="number">40</span>)</div><div class="line">d[<span class="string">'Jack'</span>] = (<span class="number">1</span>,<span class="number">50</span>)</div><div class="line">d.keys()</div><div class="line"></div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">sorce = OrderedDict()</div><div class="line">players = list(<span class="string">'abcdefgh'</span>)</div><div class="line">start = time()</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">    input()</div><div class="line">    p = players.pop(randint(<span class="number">0</span>, <span class="number">7</span> - i))</div><div class="line">    end = time()</div><div class="line">    print(i+<span class="number">1</span>,p,end - start)</div><div class="line">    sorce[p] = (i+<span class="number">1</span>,end - start)</div><div class="line">print(<span class="string">'-'</span>*<span class="number">20</span>)</div><div class="line"></div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> sorce:</div><div class="line">    print(k,sorce[k])</div></pre></td></tr></table></figure><h3 id="如何实现用户的历史记录功能-最多n条"><a href="#如何实现用户的历史记录功能-最多n条" class="headerlink" title="如何实现用户的历史记录功能(最多n条)"></a>如何实现用户的历史记录功能(最多n条)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">N = randint(<span class="number">0</span>,<span class="number">100</span>)</div><div class="line"><span class="comment"># 一个容纳5个值的队列</span></div><div class="line">history = deque([],<span class="number">5</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span><span class="params">(k)</span>:</span></div><div class="line">    <span class="keyword">if</span> k == N:</div><div class="line">        print(<span class="string">'right!'</span>)</div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">if</span> k &lt; N:</div><div class="line">        print(<span class="string">'%s is less than N'</span>%k)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'%s is greater than N'</span>%k)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    input_number = input(<span class="string">'please input a number: '</span>)</div><div class="line">    <span class="keyword">if</span> input_number.isdigit():</div><div class="line">        k = int(input_number)</div><div class="line">        history.append(k)</div><div class="line">        <span class="keyword">if</span> guess(k):</div><div class="line">            <span class="keyword">break</span></div><div class="line">    <span class="keyword">elif</span> input_number == <span class="string">'history'</span>:</div><div class="line">        print(list(history))</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际编程和面试都会遇到的典型问题。&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2692212-a4957aa59b24a21f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图片来源于网络&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;图片来源于网络&lt;/div&gt;
            &lt;/figure&gt;
    
    </summary>
    
      <category term="Python高效编程" scheme="http://qinlong.men/categories/Python%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="http://qinlong.men/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Mac下安装Python虚拟环境Virtualenv</title>
    <link href="http://qinlong.men/2017/10/18/Mac%E4%B8%8B%E5%AE%89%E8%A3%85Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83Virtualenv/"/>
    <id>http://qinlong.men/2017/10/18/Mac下安装Python虚拟环境Virtualenv/</id>
    <published>2017-10-18T09:11:10.000Z</published>
    <updated>2017-10-24T09:18:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>virtualenv官方文档对virtualenv的解释是:</p><blockquote><p><strong>virtualenv is a tool to create isolated Python environments.</strong></p></blockquote><p>virtualenv可以创建一个独立的 Python 环境，每个项目都可以有一个专属环境，避免了不同各种包安装冲突以及版本要求问题，可以让你更方便快捷的切换不同 Python 环境，更高效的开发。</p><blockquote><p>pip是 Python 自带的包管理工具。</p></blockquote><h3 id="安装-virtualenv"><a href="#安装-virtualenv" class="headerlink" title="安装 virtualenv"></a>安装 virtualenv</h3><p><code>$ sudo pip install virtualenv</code></p><p>测试virtualenv是否安装成功:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir ~/Pyenv</div><div class="line">$ cd ~/Pyenv</div><div class="line">$ mkvirtualenv env1</div></pre></td></tr></table></figure><h3 id="安装-virtualenvwrapper"><a href="#安装-virtualenvwrapper" class="headerlink" title="安装 virtualenvwrapper"></a>安装 virtualenvwrapper</h3><p>Virtaulenvwrapper是对virtualenv的封装，可以更方便地管理虚拟环境。</p><p><code>$ sudo easy_install virtualenvwrapper</code></p><p>第一次安装完成后需要，先设置<code>WORKON_HOME</code>，即环境的存储路径，并且运行<code>source /usr/local/bin/virtualenvwrapper.sh</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ export WORKON_HOME=~/Pyenv</div><div class="line">$ source /usr/local/bin/virtualenvwrapper.sh</div></pre></td></tr></table></figure><p>把export命令和source命令加入到~/.bash_profile中，每次打开终端就无需初始化了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ vim ~/.bash_profile</div><div class="line">$ export WORKON_HOME=~/Pyenv</div><div class="line">$ source /usr/local/bin/virtualenvwrapper.sh</div></pre></td></tr></table></figure><h4 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h4><p><code>$ mkvirtualenv env２</code></p><p>环境创建之后，会自动进入该目录，并激活该环境，当前路径前面就会有 (env2)。</p><h4 id="列出虚拟环境："><a href="#列出虚拟环境：" class="headerlink" title="列出虚拟环境："></a>列出虚拟环境：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ lsvirtualenv -b</div><div class="line">env1</div><div class="line">env2</div></pre></td></tr></table></figure><h4 id="切换虚拟环境："><a href="#切换虚拟环境：" class="headerlink" title="切换虚拟环境："></a>切换虚拟环境：</h4><p><code>$ workon env1</code></p><h4 id="查看环境里安装了哪些包："><a href="#查看环境里安装了哪些包：" class="headerlink" title="查看环境里安装了哪些包："></a>查看环境里安装了哪些包：</h4><p><code>$ lssitepackages</code></p><h4 id="复制虚拟环境："><a href="#复制虚拟环境：" class="headerlink" title="复制虚拟环境："></a>复制虚拟环境：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cpvirtualenv env1 env3</div><div class="line">Copying env1 as env3...</div></pre></td></tr></table></figure><h4 id="退出虚拟环境："><a href="#退出虚拟环境：" class="headerlink" title="退出虚拟环境："></a>退出虚拟环境：</h4><p><code>$ deactivate</code></p><h4 id="删除虚拟环境："><a href="#删除虚拟环境：" class="headerlink" title="删除虚拟环境："></a>删除虚拟环境：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ rmvirtualenv env2</div><div class="line">Removing env2...</div></pre></td></tr></table></figure><p>至此，Python虚拟环境Virtualenv安装流程完毕，你可以在你自己的虚拟环境下随意安装各种包，不同项目间也不会相互影响了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;virtualenv官方文档对virtualenv的解释是:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;virtualenv is a tool to create isolated Python environments.&lt;/strong&gt;&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
      <category term="Python环境" scheme="http://qinlong.men/categories/Python%E7%8E%AF%E5%A2%83/"/>
    
    
      <category term="Python" scheme="http://qinlong.men/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux 操作命令</title>
    <link href="http://qinlong.men/2017/06/26/Linux-%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://qinlong.men/2017/06/26/Linux-操作命令/</id>
    <published>2017-06-26T14:45:42.000Z</published>
    <updated>2017-10-24T09:19:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>整理了一些日常用的 Linux命令,留作以后查阅之用。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div></pre></td><td class="code"><pre><div class="line">绝对路径：cd /home/python</div><div class="line">相对路径：cd Downloads</div><div class="line"></div><div class="line">. 表示：当前那路径</div><div class="line">..表示：当前路径的上一层</div><div class="line">../.. 表示：当前路径的上二层</div><div class="line"></div><div class="line">没有...或者以上的</div><div class="line"></div><div class="line"></div><div class="line">ls:</div><div class="line">ls 查看当前路径下的文件以及文件夹的名字</div><div class="line">ls /bin 表示：查看根目录下的bin文件夹下的东西</div><div class="line">ls Documents 表示：查看当前路径下的Documents文件夹下的所有东西</div><div class="line"></div><div class="line">ls *:  * 表示任意多个字符，也可以没有</div><div class="line"></div><div class="line">? 表示一个字符，一定有1个，不能没有</div><div class="line"></div><div class="line">[xn] 表示：中括号中的任意一个字符</div><div class="line">[abcdef]可以写成[a-f]:表示 从a到f之间的任意一个字符</div><div class="line"></div><div class="line">-a 隐藏文件</div><div class="line">-l 列表显示风格</div><div class="line">-h 配合-l 显示一个合理的大小单位</div><div class="line"></div><div class="line">cd ：</div><div class="line">cd Desktop 进入到Desktop这个文件夹</div><div class="line"></div><div class="line">cd 文件夹的名字</div><div class="line"></div><div class="line">cd .. 跳转到当前路径的上一层</div><div class="line"></div><div class="line">cd - 跳转到上一次所在的路径（类似电视机遥控器中的回看）</div><div class="line"></div><div class="line">cd ~ 跳转到当前用户的家目录(/home/python)</div><div class="line"></div><div class="line">pwd：显示当前操作的路径（绝对路径   /aaa/bb/cc）</div><div class="line"></div><div class="line">clear:清屏</div><div class="line"></div><div class="line">tab键：用来自动补全</div><div class="line"></div><div class="line">touch:创建一个文件，linux中没有后缀的说法，所有文件名自定义</div><div class="line"></div><div class="line">重定向:</div><div class="line"></div><div class="line">ls &gt; test.txt 表示：把本来显示在终端上的信息写入到test.txt文件中</div><div class="line"></div><div class="line">&gt;&gt; 和 &gt; 的区别是:&gt;&gt; 是在源文件的末尾添加，而&gt; 先清空然后再添加</div><div class="line"></div><div class="line">gedit haha.txt 用gedit编辑器打开haha.txt文件</div><div class="line"></div><div class="line">more:</div><div class="line"></div><div class="line">more test.txt 如果test.txt文件的内容如果很多，那么就用分屏的方式显示</div><div class="line"></div><div class="line">ls -alh | more 先把ls -alh显示的内容存放到 管道|中，，然后more从管道中去数据，然后分屏显示</div><div class="line"></div><div class="line"></div><div class="line">mkdir:创建文件夹</div><div class="line"></div><div class="line">mkdir a 在当前路径下创建a文件夹</div><div class="line">mkdir A/B/C 不能创建，，，需要添加-p</div><div class="line"></div><div class="line">tree：以目录树的方式显示 文件夹结构</div><div class="line"></div><div class="line">rmdir: 删除空文件夹</div><div class="line"></div><div class="line">rm:</div><div class="line">rm haha.txt 删除一个普通文件</div><div class="line">rm 文件夹 会有提示，要删除的东西是个文件夹，，，，如果真的要删除可以添加 -r(递归删除文件夹里面的所有东西)</div><div class="line"></div><div class="line">ln -s 源文件 链接文件 表示：软连接</div><div class="line">ln 源文件 链接文件 表示：硬链接，，，注意硬链接数量为1时，才会真正删除数据，否则不会</div><div class="line"></div><div class="line"></div><div class="line">cat 1. 查看文件的内容</div><div class="line">2. 合并多个文件  需要和  重定向&gt;配合</div><div class="line"></div><div class="line">cat 1.txt 2.txt &gt; 3.txt</div><div class="line"></div><div class="line">grep :从指定的文件中搜索需要的内容</div><div class="line"></div><div class="line">-n:显示行号</div><div class="line">-i:不区分大小写</div><div class="line">-v:取反，即不包含需要的内容的行</div><div class="line"></div><div class="line">作业：</div><div class="line">有一个文件（内容自定），现在需要把以字母a开头的所有内容和字母b结尾的所有内容存放到一个新文件result.txt中</div><div class="line"></div><div class="line">例如：</div><div class="line">源文件为 test.txt,内容如下:</div><div class="line">sdfisdbbbb</div><div class="line">abcdefksjdfkjskdfksdj</div><div class="line">akksjdfkjskdfj0000</div><div class="line">kjskdfjaaksjdfkjsdkfaaa</div><div class="line">ijijsdfjsdbbbbbb12</div><div class="line">bksjdkfjsdja</div><div class="line">kajsdkfjaksb</div><div class="line">ksjdkfkasdbbbbb</div><div class="line"></div><div class="line">执行完之后的结果为：</div><div class="line">abcdefksjdfkjskdfksdj</div><div class="line">akksjdfkjskdfj0000</div><div class="line">sdfisdbbbb</div><div class="line">kajsdkfjaksb</div><div class="line">ksjdkfkasdbbbbb</div><div class="line"></div><div class="line">查找文件：</div><div class="line">find 路径 -name &apos;*.t?t&apos;</div><div class="line"></div><div class="line">通配符，注意点：</div><div class="line">[a-zA-Z0-9]*.txt</div><div class="line"></div><div class="line">复制文件：</div><div class="line">cp a b 将a文件夹整体复制到b文件夹下</div><div class="line">cp a/* b 将a文件夹下的所有内容赋值到b文件夹下</div><div class="line"></div><div class="line">剪切文件：</div><div class="line">mv a b 将a文件夹整体移动（剪切）到b文件夹下</div><div class="line"></div><div class="line">B----字节</div><div class="line">K----&gt;千字节  1024B</div><div class="line">M----&gt;兆字节  1024K</div><div class="line">G</div><div class="line">T</div><div class="line">p</div><div class="line"></div><div class="line">tar -cvf xxx.tar * 打包</div><div class="line">gzip xxx.tar 压缩</div><div class="line"></div><div class="line">gzip -d xxx.tar.gz</div><div class="line">tar -xvf xxx.tar</div><div class="line"></div><div class="line">常见的压缩解压方式：</div><div class="line"></div><div class="line">tar -zcvf xxx.tar.gz *</div><div class="line">tar -zxvf xxx.tar.gz</div><div class="line"></div><div class="line">tar -jcvf xxx.tar.bz2 *</div><div class="line">tar -jxvf xxx.tar.bz2</div><div class="line"></div><div class="line">linux：多用户多任务的OS</div><div class="line"></div><div class="line">ifconfig :查看ip地址</div><div class="line"></div><div class="line">WINDOWS中使用ipconfig</div><div class="line"></div><div class="line">ping：</div><div class="line"></div><div class="line">ping 192.168.17.76 测试网络连接是否正常</div><div class="line"></div><div class="line"></div><div class="line">ssh:远程登录</div><div class="line"></div><div class="line">ssh python@192.168.17.76</div><div class="line">ssh 用户名@ip</div><div class="line"></div><div class="line">whoami：查看当前用户名</div><div class="line"></div><div class="line">who:查看当前登录的用户信息</div><div class="line"></div><div class="line">exit:退出登录</div><div class="line"></div><div class="line">useradd 新的用户名 -m -d /home/新用户名 -g 组名</div><div class="line"></div><div class="line">passwd 用户名</div><div class="line"></div><div class="line">su 需要切换的用户名</div><div class="line">su - 需要切换的用户名, 切换用户后，还会主动跳转到该用户的家目录</div><div class="line"></div><div class="line">python----&gt;laowang-----&gt;python</div><div class="line"></div><div class="line">sudo 当需要超级管理员的权限时需要添加，并且在命令行的最前面，后面需要空格</div><div class="line">sudo passwd laowang</div><div class="line"></div><div class="line">sudo -s 直接切换到root用户</div><div class="line"></div><div class="line">groupadd YYY 添加一个YYY用户组</div><div class="line">groupdel YYY 删除一个组，，，，注意需要sudo</div><div class="line"></div><div class="line">cat /etc/group</div><div class="line"></div><div class="line">groups laowang表示：查看laowang所属的所有用户组</div><div class="line"></div><div class="line">usermod -g YYY laowang 把老王添加到YYY组里面</div><div class="line"></div><div class="line">usermod -a -G XXX laowang 把老王添加到XXX组里面</div><div class="line"></div><div class="line">-g 和 -G，-g指定的是默认的组</div><div class="line"></div><div class="line">useradd创建的新用户没有sudo，或者切换到root的权限，需要把这个用户添加到adm、sudo组里面才可以</div><div class="line"></div><div class="line"></div><div class="line">chmod 修改文件的权限</div><div class="line"></div><div class="line">u：拥有者</div><div class="line">g:同组者</div><div class="line">o：其他人</div><div class="line">a:所有，即u、g、o</div><div class="line"></div><div class="line">+ 添加权限</div><div class="line">- 去除权限</div><div class="line">= 设定权限</div><div class="line"></div><div class="line">r:读------&gt;对应的数字是4</div><div class="line">w：写------&gt;对应的数字是2</div><div class="line">x：执行------&gt;对应的数字是1</div><div class="line"></div><div class="line">chmod 777 文件夹，只会修改文件夹的权限为777 ，不会修改里面文件的权限</div><div class="line"></div><div class="line">-R 会修改文件夹里面所有的文件、文件夹的权限（递归）</div><div class="line"></div><div class="line">vi：</div><div class="line">从命令模式---》编辑模式：i、a、o、I、A、O</div><div class="line">从编辑模式----》命令模式：ESC</div><div class="line">从命令模式----》末行模式：输入一个冒号，即shit+;</div><div class="line"></div><div class="line">末行模式：</div><div class="line">w保存</div><div class="line">q退出</div><div class="line">！强制</div><div class="line"></div><div class="line">常用的：</div><div class="line">wq保存退出，等价于   x（小写的x），，，，还等价于在命令模式 shit+2个z</div><div class="line">q!不保存退出</div><div class="line"></div><div class="line">命令模式：</div><div class="line">hjkl控制上下作用</div><div class="line">M中间位置</div><div class="line">L当前屏幕的最后一行</div><div class="line">yy 复制，8yy：表示从当前光标所在的行开始复制8行</div><div class="line">p 粘贴</div><div class="line">dd 剪切，8dd：表示从当前光标所在的行开始剪切8行</div><div class="line"></div><div class="line">u 撤销</div><div class="line">ctl+r 反撤销</div><div class="line"></div><div class="line">G 调到最后1行</div><div class="line">15G 表示跳转到第15行</div><div class="line">1G表示跳转到第1行</div><div class="line"></div><div class="line">gg 跳转到第1行</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理了一些日常用的 Linux命令,留作以后查阅之用。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qinlong.men/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qinlong.men/tags/Linux/"/>
    
  </entry>
  
</feed>
